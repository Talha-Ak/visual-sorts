(this["webpackJsonpvisual-sorts"]=this["webpackJsonpvisual-sorts"]||[]).push([[0],{29:function(e,t,r){},58:function(e,t,r){"use strict";r.r(t);var n=r(1),a=r.n(n),s=r(11),i=r.n(s),o=(r(29),r(24)),l=r(6),d=r(3),c=r(7),h=r(2),u=function(e){var t=e.list,r=e.selectedItem,a=e.setSelectedItem,s=e.disabled;return Object(h.jsx)("div",{className:"w-64",children:Object(h.jsx)(d.b,{value:r,onChange:a,disabled:s,children:Object(h.jsxs)(h.Fragment,{children:[Object(h.jsx)(d.b.Label,{className:"text-sm font-medium text-gray-500 dark:text-gray-400",children:"Algorithm"}),Object(h.jsxs)("div",{className:"relative",children:[Object(h.jsxs)(d.b.Button,{className:"relative w-full py-2 pl-3 pr-10 text-left sm:text-sm bg-white dark:bg-trueGray-800 disabled:bg-gray-100 dark:disabled:bg-trueGray-600 hover:bg-blue-50 dark:hover:bg-gray-700 transition-colors duration-150 rounded-md shadow-md focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 cursor-default",children:[Object(h.jsx)("span",{className:"block truncate dark:text-gray-400",children:t[r]}),Object(h.jsx)("span",{className:"absolute inset-y-0 right-0 flex items-center p-2 pointer-events-none",children:Object(h.jsx)(c.c,{className:"w-5 h-5 text-gray-400","aria-hidden":"true"})})]}),Object(h.jsx)(d.d,{as:n.Fragment,leave:"transition ease-in duration-75",leaveFrom:"transform opacity-100 translate-y-0",leaveTo:"transform opacity-0 translate-y-1.5 md:-translate-y-1.5",children:Object(h.jsx)(d.b.Options,{static:!0,className:"absolute bottom-full md:bottom-auto z-10 w-full py-1 my-1 overflow-auto text-base bg-white dark:bg-trueGray-800 rounded-md shadow-lg max-h-64 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm",children:t.map((function(e,t){return Object(h.jsx)(d.b.Option,{className:function(e){var t=e.active;return"".concat(t?"text-blue-900 dark:text-blue-300 bg-blue-100 dark:bg-gray-700":"text-gray-900 dark:text-gray-400","\n                          cursor-default select-none relative py-2 pl-10 pr-4")},value:t,children:function(t){var r=t.selected;t.active;return Object(h.jsxs)(h.Fragment,{children:[Object(h.jsx)("span",{className:"".concat(r?"font-medium":"font-normal"," block truncate"),children:e}),r?Object(h.jsx)("span",{className:"".concat("text-blue-600","\n                                absolute inset-y-0 left-0 flex items-center pl-3"),children:Object(h.jsx)(c.a,{className:"w-5 h-5","aria-hidden":"true"})}):null]})}},t)}))})})]})]})})})},b=r(60),m=r(4),p=r(59);b.a.registerLanguage("javascript",m.a);var j={name:"Bubble Sort",sort:function(e){for(var t=[],r=!0,n=e.length;r;){r=!1;for(var a=1;a<n;a++)L(a-1,a,e,t)&&(R(a-1,a,e,t),r=!0);n--}return t.push({type:"end",values:[-1,-1],array:e}),t},info:function(){return Object(h.jsxs)("div",{className:"text-sm",children:[Object(h.jsx)("p",{children:"Bubble sort works by simply swapping adjacent elements if they are in the wrong order."}),Object(h.jsx)("br",{}),Object(h.jsxs)("p",{children:["The algorithm loops through the entire array, checking if each pair of elements are in the right order. If not, the pair of elements are swapped. This continues until the end of the array is reached, where the largest element ",Object(h.jsx)("b",{children:"bubbles"})," up to the top."]}),Object(h.jsx)("br",{}),Object(h.jsx)("p",{children:"This process is repeated again, excluding the last index (as it is already sorted now). Once the algorithm loops over the array without swapping elements, the algorithm terminates and the sort is complete."}),Object(h.jsx)("br",{}),Object(h.jsx)(b.a,{language:"javascript",style:p.a,customStyle:{borderRadius:"0.375rem"},children:"const array = [...];\nlet swapped = true;\nlet searchSize = array.length;\n\n// Loop until swapping stops.\nwhile (swapped) {\n  swapped = false;\n\n  // Loop through the array.\n  // [i - 1] and [i] used to compare element pairs,\n  // so set i = 1 (not 0)\n  for (let i = 1; i < searchSize; i++) {\n    if (array[i-1] > array[i]) {\n      // Swap elements\n      temp = array[i - 1];\n      array[i - 1] = array[i];\n      array[i] = temp;\n\n      // Mark swapped as true, continue looping\n      swapped = true;\n    }\n  }\n\n  // Largest element is sorted, exclude last index\n  // by reducing searchSize.\n  searchSize--;\n}"})]})}};b.a.registerLanguage("javascript",m.a);var g={name:"Insertion Sort",sort:function(e){for(var t=[],r=1;r<e.length;){for(var n=r;n>0&&L(n-1,n,e,t);)R(n-1,n,e,t),n--;r++}return t.push({type:"end",values:[-1,-1],array:e}),t},info:function(){return Object(h.jsxs)("div",{className:"text-sm",children:[Object(h.jsx)("p",{children:"Insertion sort works by dividing the array into two parts - a sorted part and an unsorted part."}),Object(h.jsxs)("p",{children:["An element in the unsorted part is compared with the elements in the sorted part until the correct position is found, where it is then ",Object(h.jsx)("b",{children:"insert"}),"ed."]}),Object(h.jsx)("br",{}),Object(h.jsx)("p",{children:"Initially, the sorted part starts with a single element (a single element is already sorted)."}),Object(h.jsx)("p",{children:"The first element in the unsorted part is compared with the largest element in the sorted part of the array (i.e. the previous element)."}),Object(h.jsx)("br",{}),Object(h.jsxs)("ul",{className:"list-disc list-inside ml-4",children:[Object(h.jsx)("li",{children:"If that element is larger, both elements swap positions."}),Object(h.jsx)("li",{children:"If the element is smaller, the first element is sorted."})]}),Object(h.jsx)("br",{}),Object(h.jsx)("p",{children:"This process continues until the end of the array is reached."}),Object(h.jsx)("br",{}),Object(h.jsx)(b.a,{language:"javascript",style:p.a,customStyle:{borderRadius:"0.375rem"},children:"const array = [...];\nlet i = 1; // Skip first element\n\n// Loop through the entire array...\nwhile (i < array.length) {\n    let j = i;\n    // Compare previous (sorted) element with current.\n    // If previous is larger, swap.\n    while (j > 0 && array[j + 1] > array[j]) {\n      temp = array[j + 1];\n      array[j + 1] = array[j];\n      array[j] = temp;\n\n      // Compare again with the next sorted element.\n      j--;\n    }\n\n    // If previous is smaller, element is sorted.\n    // Go to the next unsorted element.\n    i++;\n}"})]})}};b.a.registerLanguage("javascript",m.a);var x={name:"Selection Sort",sort:function(e){for(var t=[],r=0;r<e.length-1;r++){for(var n=r,a=r+1;a<e.length;a++)A(a,n,e,t)&&(n=a);n!==r&&R(r,n,e,t)}return t.push({type:"end",values:[-1,-1],array:e}),t},info:function(){return Object(h.jsxs)("div",{className:"text-sm",children:[Object(h.jsx)("p",{children:"Selection sort works by dividing the array into two parts - a sorted part and an unsorted part."}),Object(h.jsx)("br",{}),Object(h.jsx)("p",{children:"The algorithm then looks through the entire array for the smallest element, and places it in the first position of the array. It proceeds to then find the next smallest element in the unsorted part of the array, and places it in the second position of the array."}),Object(h.jsx)("br",{}),Object(h.jsx)("p",{children:"This continues until the second largest element is placed in the second last position. The largest element will already be sorted as it will have swapped with the element that was in the last position."}),Object(h.jsx)("br",{}),Object(h.jsx)(b.a,{language:"javascript",style:p.a,customStyle:{borderRadius:"0.375rem"},children:"const array = [...];\n\n// Loop through array up to array.length - 1\n// because last element will already be sorted.\nfor (let i = 0; i < array.length - 1; i++) {\n\n  // Keep track of index with smallest element.\n  let minIndex = i;\n\n  // Compare every index with minIndex.\n  // If there is a smaller element, update minIndex.\n  for (let j = i + 1; j < array.length; j++) {\n    if (array[j] < array[minIndex]) minIndex = j;\n  }\n\n  // Swap elements in minIndex and current index (i).\n  if (minIndex !== i) {\n      temp = array[i];\n      array[i] = array[minIndex];\n      array[minIndex] = temp;\n  }\n}"})]})}};b.a.registerLanguage("javascript",m.a);var y=function e(t,r,n,a,s){if(n!==a){var i=Math.floor((n+a)/2);return e(r,t,n,i,s),e(r,t,i+1,a,s),f(t,r,n,i,a,s),t}},f=function(e,t,r,n,a,s){for(var i=r,o=r,l=n+1;i<=n&&l<=a;)F(i,l,t,s)?(s.push({type:"overwrite",values:[o,t[i]]}),e[o++]=t[i++]):(s.push({type:"overwrite",values:[o,t[l]]}),e[o++]=t[l++]);for(;i<=n;)s.push({type:"overwrite",values:[o,t[i]]}),e[o++]=t[i++];for(;l<=a;)s.push({type:"overwrite",values:[o,t[l]]}),e[o++]=t[l++]},v={name:"Merge Sort",sort:function(e){var t=[];return y(e,e.slice(),0,e.length-1,t),t.push({type:"end",values:[-1,-1],array:e}),t},info:function(){return Object(h.jsxs)("div",{className:"text-sm",children:[Object(h.jsx)("p",{children:"Merge sort is a divide and conquer algorithm that:"}),Object(h.jsxs)("ol",{className:"list-inside list-decimal ml-4",children:[Object(h.jsx)("li",{children:"Divides the array into subarrays, each containing one element."}),Object(h.jsx)("li",{children:"Continually merge subarrays together to produce sorted subarrays, until there is one subarray left (the sorted array)."})]}),Object(h.jsx)("br",{}),Object(h.jsx)("p",{children:"The dividing is done simply by halving the array each time, using recursion to merge sort the halves. This is done until all subarrays contain one element (an array of one element is sorted)."}),Object(h.jsx)("br",{}),Object(h.jsx)("p",{children:"The merging is done by comparing the first element of the two subarrays to be merged. The smaller element of the two is moved to the beginning of the main sorting array, and the subarray with the smaller first element moves to the second element. The comparison is run again until one of the subarrays are empty. At that point, the remaining subarray is appended to the sorting array."}),Object(h.jsx)("br",{}),Object(h.jsx)("p",{children:"The merge step is repeated for all subarray pairs until the final two subarrays are merged, leaving the sorted array."}),Object(h.jsx)("br",{}),Object(h.jsx)(b.a,{language:"javascript",style:p.a,customStyle:{borderRadius:"0.375rem"},children:"const array = [...];\n\n// First parameter is the actual array to be sorted.\n// Second parameter is a array copy for working.\nmergeSort(array, array.slice(), 0, array.length - 1);\n\nconst mergeSort =\n  (array, clonedArray, beginIdx, endIdx) => {\n\n  // Base case - if subarray is length 1, return.\n  if (beginIdx === endIdx) return;\n\n  // Split array in half, run merge sort on halves.\n  const midIdx = Math.floor((beginIdx + endIdx) / 2);\n\n  mergeSort(clonedArray, array, beginIdx, midIdx);\n  mergeSort(clonedArray, array, midIdx + 1, endIdx);\n  merge(array, clonedArray, beginIdx, midIdx, endIdx);\n\n  return array;\n};\n\nconst merge =\n  (array, clonedArray, beginIdx, midIdx, endIdx) => {\n\n  // The index of the main array element to compare.\n  let i = beginIdx;\n\n  // The index of the cloned array element to compare.\n  let j = midIdx + 1;\n\n  // The index of the main array to insert into.\n  let k = beginIdx;\n\n\n  // Compare & add the smaller first element.\n  // Increment index from the subarray that was smaller,\n  // and repeat until one array is empty.\n  while (i <= midIdx && j <= endIdx) {\n      if (clonedArray[i] <= clonedArray[j]) {\n      array[k++] = clonedArray[i++];\n    } else {\n      array[k++] = clonedArray[j++];\n    }\n  }\n\n  // Go through subarrays and add left over elements.\n  while (i <= midIdx) {\n    array[k++] = clonedArray[i++];\n  }\n  while (j <= endIdx) {\n    array[k++] = clonedArray[j++];\n  }\n};"})]})}};b.a.registerLanguage("javascript",m.a);var O=function e(t,r,n,a){if(r<n){var s=w(t,r,n,a);e(t,r,s,a),e(t,s+1,n,a)}},w=function(e,t,r,n){for(var a=Math.floor((t+r)/2),s=t-1,i=r+1;;){do{s++}while(A(s,a,e,n));do{i--}while(L(i,a,e,n));if(s>=i)return i;R(s,i,e,n),s===a?a=i:i===a&&(a=s)}},k={name:"Quick Sort",sort:function(e){var t=[];return O(e,0,e.length-1,t),t.push({type:"end",values:[-1,-1],array:e}),t},info:function(){return Object(h.jsxs)("div",{className:"text-sm",children:[Object(h.jsx)("p",{children:"Quick sort is a divide and conquer algorithm that:"}),Object(h.jsxs)("ol",{className:"list-decimal list-inside ml-4",children:[Object(h.jsx)("li",{children:'Continually divides the array into two subarrays depending on the element in comparison to a "pivot".'}),Object(h.jsx)("li",{children:"Combining the sorted subarrays together to give the entire sorted array."})]}),Object(h.jsx)("br",{}),Object(h.jsx)("p",{children:"The algorithm starts by choosing a pivot element within the array. All elements before the pivot need to be smaller than the pivot element, and elements after the pivot need to be larger. Two pointers are then initialised at the beginning and end of the array. These pointers move towards the center of the array until the left pointer points to an element greater than the pivot and the right pointer points to an element smaller than the pivot."}),Object(h.jsx)("br",{}),Object(h.jsx)("p",{children:"If the greater element is before the smaller element (i.e. the elements are on the wrong sides of the pivot) they are swapped. This process continues until eventually the pointers cross over each other - where the pivot belongs."}),Object(h.jsx)("br",{}),Object(h.jsx)("p",{children:"This sort is then repeated for all the elements before the original pivot and all elements after the original pivot."}),Object(h.jsx)("br",{}),Object(h.jsx)(b.a,{language:"javascript",style:p.a,customStyle:{borderRadius:"0.375rem"},children:"const array = [...];\nquickSort(array, 0, array.length - 1);\n\nconst quickSort = (array, startIdx, endIdx) => {\n  if (startIdx < endIdx) {\n    // Divide the array into two halves, sort each half.\n    const p = partition(array, startIdx, endIdx);\n    quickSort(array, startIdx, p);\n    quickSort(array, p + 1, endIdx);\n  }\n};\n\nconst partition = (array, startIdx, endIdx) => {\n\n  // Set pivot to be the middle of the array.\n  // This is arbitrary, pivot can be any element.\n  let pivotIdx = Math.floor((startIdx + endIdx) / 2);\n\n  // Set the two pointers to be the ends of the array.\n  let i = startIdx;\n  let j = endIdx;\n\n  while (true) {\n\n    // Loop until element at i is smaller than pivot.\n    while (array[i] < array[pivotIdx]) {\n      i++;\n    }\n\n    // Loop until element at j is greater than pivot.\n    while (array[j] > array[pivotIdx]) {\n      j--;\n    }\n\n    // If pointers crossed over, division completed.\n    if (i >= j) {\n      return j;\n    }\n\n    // Otherwise, swap elements at i and j.\n    temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n\n    // Keep track of pivot element idx if swapped.\n    if (i === pivotIdx) {\n      pivotIdx = j;\n    } else if (j === pivotIdx) {\n      pivotIdx = i;\n    }\n  }\n};"})]})}};b.a.registerLanguage("javascript",m.a);var I=function(e,t){for(var r=S(e.length-1);r>=0;)N(e,r,e.length-1,t),r--},N=function(e,t,r,n){for(;T(t)<=r;){var a=T(t),s=t;if(A(s,a,e,n)&&(s=a),a+1<=r&&A(s,a+1,e,n)&&(s=a+1),s===t)return;R(s,t,e,n),t=s}},S=function(e){return Math.floor((e-1)/2)},T=function(e){return 2*e+1},C={name:"Heap Sort",sort:function(e){var t=[];I(e,t);for(var r=e.length-1;r>0;)R(0,r,e,t),r--,N(e,0,r,t);return t.push({type:"end",values:[-1,-1],array:e}),t},info:function(){return Object(h.jsxs)("div",{className:"text-sm",children:[Object(h.jsx)("p",{children:"Heap sort works by dividing the array into two parts - a sorted part and an unsorted part."}),Object(h.jsx)("br",{}),Object(h.jsx)("p",{children:"The algortihm itself works in two stages."}),Object(h.jsxs)("p",{children:["In the first stage, a ",Object(h.jsx)("a",{className:"underline",href:"https://en.wikipedia.org/wiki/Heap_(data_structure)",children:"binary max-heap"})," is created from the unsorted region. This is done by mapping the root node of the heap to index 0, and then for all nodes:"]}),Object(h.jsxs)("ol",{className:"list-inside list-disc ml-4",children:[Object(h.jsxs)("li",{children:["The parent of a node is mapped to ",Object(h.jsx)("i",{children:"floor((i-1) / 2)"})]}),Object(h.jsxs)("li",{children:["The left child of a node is mapped to ",Object(h.jsx)("i",{children:"2i + 1"})]}),Object(h.jsxs)("li",{children:["The right child of a node is mapped to ",Object(h.jsx)("i",{children:"2i + 2"})]})]}),Object(h.jsx)("br",{}),Object(h.jsx)("p",{children:"In the second stage, the sorted part is populated by continually removing the root node from the heap and into the sorted part of the array. This causes the heap property to be violated, and so the heap condition is restored (by sifting the swapped-in element at the root downwards) before removing the root node again."}),Object(h.jsx)("br",{}),Object(h.jsx)("p",{children:"Once all elements from the heap have been removed, the array is sorted."}),Object(h.jsx)("br",{}),Object(h.jsx)(b.a,{language:"javascript",style:p.a,customStyle:{borderRadius:"0.375rem"},children:'const array = [...];\n\n// Create the heap.\nbuildHeap(array);\n\nlet end = array.length - 1;\n\nwhile (end > 0) {\n  // Swap the root node of the heap with the last node.\n  temp = array[0];\n  array[0] = array[end];\n  array[end] = temp;\n\n  // Reduce the size of the heap.\n  end--;\n\n  // Restore heap property.\n  siftDown(array, 0, end);\n}\n\nconst buildHeap = (array) => {\n  // Get the parent of the last element in the array.\n  let node = getNodeParent(array.length - 1);\n\n  // Put all elements in correct location in heap.\n  while (node >= 0) {\n    siftDown(array, node, array.length - 1);\n    node--;\n  }\n};\n\nconst siftDown = (array, node, end) => {\n\n  // Loop if the current node has a child.\n  while (getNodeLeftChild(node) <= end) {\n    const leftChild = getNodeLeftChild(node);\n    let nodeToSwap = node;\n\n    // If child is greater than current "parent",\n    // mark the left child as node to swap with.\n    // (Parent node should be greater than children.)\n    if (array[nodeToSwap] < array[leftChild]) {\n      nodeToSwap = leftChild;\n    }\n\n    // If there is a right child also present,\n    // and right child is greater than the parent\n    // or left child, mark the right child instead.\n    const rightChild = getNodeRightChild(node);\n    if (\n      rightChild <= end\n      && array[nodeToSwap] < array[rightChild]\n    ) {\n      nodeToSwap = rightChild;\n    }\n\n    // If no children were marked,\n    // current node already in corrent position.\n    if (nodeToSwap === node) return;\n    \n    // Swap the child and parent around.\n    temp = array[nodeToSwap];\n    array[nodeToSwap] = array[node];\n    array[node] = temp;\n\n    // Nodes were swapped around, update the variable \n    // so it points to the correct element being sifted.\n    node = nodeToSwap;\n  }\n};\n\n// Helper functions to get indexes of heap nodes.\nconst getNodeParent = (i) => Math.floor((i - 1) / 2);\nconst getNodeLeftChild = (i) => 2 * i + 1;\nconst getNodeRightChild = (i) => 2 * i + 2;'})]})}},L=function(e,t,r,n){return n.push({type:"compare",values:[e,t]}),r[e]>r[t]},A=function(e,t,r,n){return n.push({type:"compare",values:[e,t]}),r[e]<r[t]},F=function(e,t,r,n){return n.push({type:"compare",values:[e,t]}),r[e]<=r[t]},R=function(e,t,r,n){var a=[r[t],r[e]];r[e]=a[0],r[t]=a[1],n.push({type:"swap",values:[e,t]})},G=function(e){for(var t=Array.from(Array(e).keys()),r=t.length-1;r>0;r--){var n=Math.floor(Math.random()*(r+1)),a=[t[n],t[r]];t[r]=a[0],t[n]=a[1]}return t},M=[j,C,g,v,k,x],z=function(e){var t=e.sliderOpen,r=e.setSliderOpen,a=e.selectedSortIdx;return Object(h.jsx)(d.d.Root,{show:t,as:n.Fragment,children:Object(h.jsx)(d.a,{as:"div",static:!0,className:"fixed inset-0 overflow-hidden",open:t,onClose:r,children:Object(h.jsxs)("div",{className:"absolute inset-0 overflow-hidden",children:[Object(h.jsx)(d.d.Child,{as:n.Fragment,enter:"ease-in-out duration-500",enterFrom:"opacity-0",enterTo:"opacity-100",leave:"ease-in-out duration-500",leaveFrom:"opacity-100",leaveTo:"opacity-0",children:Object(h.jsx)(d.a.Overlay,{className:"absolute inset-0 bg-gray-500 dark:bg-trueGray-900 bg-opacity-75 dark:bg-opacity-75 transition-opacity"})}),Object(h.jsx)("div",{className:"fixed inset-y-0 right-0 max-w-full flex",children:Object(h.jsx)(d.d.Child,{as:n.Fragment,enter:"transform transition ease-out duration-500 sm:duration-600",enterFrom:"translate-x-full",enterTo:"translate-x-0",leave:"transform transition ease-in-out duration-500 sm:duration-600",leaveFrom:"translate-x-0",leaveTo:"translate-x-full",children:Object(h.jsx)("div",{className:"relative w-screen max-w-lg",children:Object(h.jsxs)("div",{className:"h-full flex flex-col py-6 bg-white dark:bg-trueGray-800 shadow-xl overflow-y-auto",children:[Object(h.jsxs)("div",{className:"inline-flex justify-between px-4 sm:px-6",children:[Object(h.jsx)(d.a.Title,{className:"text-lg font-medium text-gray-900 dark:text-trueGray-200",children:M[a].name}),Object(h.jsx)(d.d.Child,{as:n.Fragment,enter:"ease-in-out duration-500",enterFrom:"opacity-0",enterTo:"opacity-100",leave:"ease-in-out duration-500",leaveFrom:"opacity-100",leaveTo:"opacity-0",children:Object(h.jsxs)("button",{className:"rounded-md text-gray-400 dark:text-gray-400 hover:text-gray-500 dark:hover:text-gray-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500",onClick:function(){return r(!1)},children:[Object(h.jsx)("span",{className:"sr-only",children:"Close panel"}),Object(h.jsx)(c.e,{className:"h-6 w-6","aria-hidden":"true"})]})})]}),Object(h.jsx)("div",{className:"mt-6 relative flex-1 px-4 sm:px-6 text-gray-900 dark:text-trueGray-200",children:M[a].info()})]})})})})]})})})},E=r(13),B=a.a.forwardRef((function(e,t){var r=e.handleClick,n=e.children;return Object(h.jsx)("button",{ref:t,onClick:r,type:"button",className:"h-full px-4 py-2 text-sm font-title text-gray-400 bg-gray-50 dark:bg-trueGray-800 hover:bg-gray-100 dark:hover:bg-trueGray-700 active:bg-gray-200 dark:active:bg-trueGray-600 transition-colors duration-150 rounded-md focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500",children:n})}));B.displayName="ControlButton";var D=B,H=function(e){var t=e.isRunning,r=e.sortNames,a=e.arraySize,s=e.handleArrayChange,i=e.handleSortClick,o=e.handleShuffleClick,c=e.handleResetClick,b=e.selectedSortIdx,m=e.setSelectedSortIdx,p=Object(n.useState)(!1),j=Object(l.a)(p,2),g=j[0],x=j[1];return Object(h.jsxs)(h.Fragment,{children:[Object(h.jsxs)("div",{className:"w-64",children:[Object(h.jsxs)("div",{className:"text-sm font-medium text-gray-500 dark:text-gray-400",children:[Object(h.jsx)("span",{children:"Array size"}),Object(h.jsx)("span",{className:"float-right",children:a})]}),Object(h.jsx)("input",{type:"range",min:"5",max:"100",disabled:t,value:a,onChange:s,className:"w-full rounded-lg focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500"})]}),Object(h.jsx)(u,{list:r,selectedItem:b,setSelectedItem:m,disabled:t}),Object(h.jsxs)("button",{onClick:function(){return x(!0)},className:"flex items-center text-sm font-semibold text-gray-500 dark:text-gray-400 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500",children:[Object(h.jsx)(E.a,{className:"inline mr-1 align-bottom","aria-hidden":"true"}),"How it works"]}),Object(h.jsx)(z,{sliderOpen:g,setSliderOpen:x,selectedSortIdx:b}),Object(h.jsxs)("div",{className:"w-64 mt-1 grid grid-cols-3 gap-x-4",children:[Object(h.jsxs)(D,{handleClick:o,children:[Object(h.jsx)(E.b,{className:"w-5 h-5 mx-auto","aria-hidden":"true"}),"Shuffle"]}),Object(h.jsx)("button",{onClick:i,type:"button",className:"z-0 min-w-0 h-3/4 px-4 py-2.5 self-center text-sm font-title text-blue-900 dark:text-blue-400 bg-blue-100 dark:bg-gray-700 hover:bg-blue-200 dark:hover:bg-gray-600 active:bg-blue-300 dark:active:bg-gray-500 rounded-md shadow-md transition transform motion-reduce:transition-none duration-150 ease-out active:translate-y-0.5 active:shadow-none focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500",children:"Sort"}),Object(h.jsx)(d.d,{as:n.Fragment,show:t,enter:"transition ease-out duration-100",enterFrom:"transform -translate-x-3 opacity-0",enterTo:"transform translate-x-0 opacity-100",leave:"transition ease-in duration-100",leaveFrom:"opacity-100",leaveTo:"opacity-0",children:Object(h.jsxs)(D,{handleClick:c,children:[Object(h.jsx)(E.c,{className:"w-5 h-5 mx-auto","aria-hidden":"true"}),"Reset"]})})]})]})},q=function(e){var t=e.sortArray;return Object(h.jsx)("div",{className:"visual-bars col-span-6 lg:col-span-7 h-[24rem] lg:h-[30rem] flex items-end justify-center space-x-0.5 md:space-x-1 mx-4",children:t.map((function(e,t,r){return Object(h.jsx)("div",{className:"w-14 bg-teal-500 dark:bg-teal-600 rounded-tl-md  ",style:{height:"".concat((e+1)/r.length*100,"%")}},e+Date().toString())}))})},P=function(e){var t=e.handleToggle,r=e.isNightMode;return Object(h.jsxs)(d.c,{checked:r,onChange:t,className:"".concat(r?"bg-teal-900":"bg-teal-500","\n          inline-flex flex-shrink-0 h-[30.5px] w-[58px] border-2 border-transparent rounded-full cursor-pointer disabled:bg-gray-400 dark:disabled:bg-trueGray-600 disabled:cursor-not-allowed transition-colors ease-in-out duration-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500"),children:[Object(h.jsx)("span",{className:"sr-only",children:"Use setting"}),Object(h.jsx)("span",{"aria-hidden":"true",className:"".concat(r?"translate-x-7":"translate-x-0","\n            pointer-events-none inline-block h-[26px] w-[26px] rounded-full bg-white dark:bg-trueGray-200 shadow-lg transform ring-0 transition ease-in-out duration-200")})]})},J=r(23),K=function(){var e=Object(n.useState)(document.documentElement.classList.contains("dark")),t=Object(l.a)(e,2),r=t[0],a=t[1];return Object(n.useEffect)((function(){localStorage.setItem("isDarkTheme",r.toString()),r?document.documentElement.classList.add("dark"):document.documentElement.classList.remove("dark")}),[r]),Object(h.jsxs)(h.Fragment,{children:[Object(h.jsxs)(D,{handleClick:function(){return window.location.href="https://github.com/Talha-Ak/visual-sorts"},children:["View on",Object(h.jsx)(J.a,{className:"ml-1.5 mb-1 inline"})]}),Object(h.jsxs)("div",{className:"flex items-center justify-center space-x-1.5",children:[Object(h.jsx)(c.d,{className:"inline w-5 h-5"}),Object(h.jsx)(P,{isNightMode:r,handleToggle:a}),Object(h.jsx)(c.b,{className:"inline w-5 h-5"})]})]})},Q=function(){var e=Object(n.useState)((function(){return G(40)})),t=Object(l.a)(e,2),r=t[0],a=t[1],s=Object(n.useState)(0),i=Object(l.a)(s,2),d=i[0],c=i[1],u=Object(n.useState)(!1),b=Object(l.a)(u,2),m=b[0],p=b[1],j=Object(n.useRef)(m);j.current=m,Object(n.useEffect)((function(){m?g():a(r.slice())}),[m]);var g=function(){var e=M[d].sort(r.slice()),t=document.getElementsByClassName("visual-bars")[0].children,n=3e3/r.length-10;x(e,0,t,n)},x=function e(t,n,s,i){var d=t[n-1],c=[];"overwrite"===(null===d||void 0===d?void 0:d.type)?c.push(d.values[0]):d&&c.push.apply(c,Object(o.a)(null===d||void 0===d?void 0:d.values)),null===c||void 0===c||c.forEach((function(e){s[e].classList.remove("bg-red-500","dark:bg-red-700","bg-blue-500","dark:bg-blue-700"),s[e].classList.add("bg-teal-500","dark:bg-teal-600")}));var h=t[n],u=Object(l.a)(h.values,2),b=u[0],m=u[1];if(j.current){switch(h.type){case"compare":[s[b],s[m]].forEach((function(e){e.classList.remove("bg-teal-500","dark:bg-teal-600"),e.classList.add("bg-red-500","dark:bg-red-700")}));break;case"swap":var g=s[b],x=s[m];[g,x].forEach((function(e){e.classList.remove("bg-teal-500","dark:bg-teal-600"),e.classList.add("bg-blue-500","dark:bg-blue-700")}));var y=[x.style.height,g.style.height];g.style.height=y[0],x.style.height=y[1];break;case"overwrite":var f=s[b];f.classList.remove("bg-teal-500","dark:bg-teal-600"),f.classList.add("bg-blue-500","dark:bg-blue-700"),f.style.height="".concat((m+1)/r.length*100,"%");break;case"end":return p(!1),void a(h.array)}n++,setTimeout((function(){return e(t,n,s,i)}),i)}else{Array.from(document.getElementsByClassName("visual-bars")[0].children).forEach((function(e){e.classList.remove("bg-red-500","dark:bg-red-700"),e.classList.add("bg-teal-500","dark:bg-teal-600")}))}};return Object(h.jsxs)(h.Fragment,{children:[Object(h.jsx)("div",{className:"absolute inset-x-0 top-0 h-48 z-[-1] slant-bottom bg-teal-50 dark:bg-trueGray-800 transition-colors duration-150"}),Object(h.jsx)("div",{className:"absolute inset-x-0 bottom-0 h-32 z-[-1] slant-top bg-blue-50 dark:bg-gray-800 transition-colors duration-150"}),Object(h.jsxs)("div",{className:"min-h-screen max-w-screen-2xl mx-auto flex flex-col gap-12",children:[Object(h.jsx)("h1",{className:"flex-shrink-0 mt-4 font-title font-black text-center text-4xl md:text-6xl dark:text-trueGray-200 transition-colors duration-150",children:"Visual Sorts"}),Object(h.jsxs)("div",{className:"flex-1 gap-y-5 md:grid md:grid-cols-10 items-center",children:[Object(h.jsx)(q,{sortArray:r}),Object(h.jsx)("div",{className:"mt-8 md:m-0 md:col-span-4 lg:col-span-3 flex flex-col items-center gap-y-5 mx-4",children:Object(h.jsx)(H,{isRunning:m,sortNames:M.map((function(e){return e.name})),arraySize:r.length,handleArrayChange:function(e){return a(G(Number(e.target.value)))},handleSortClick:function(){return p(!0)},handleResetClick:function(){return p(!1)},handleShuffleClick:function(){p(!1),a(G(r.length))},selectedSortIdx:d,setSelectedSortIdx:function(e){return c(e)}})})]}),Object(h.jsx)("div",{className:"flex-shrink-0 p-4 flex items-center justify-evenly text-gray-500 dark:text-gray-400",children:Object(h.jsx)(K,{})})]})]})};i.a.render(Object(h.jsx)(a.a.StrictMode,{children:Object(h.jsx)(Q,{})}),document.getElementById("root"))}},[[58,1,2]]]);
//# sourceMappingURL=main.d47114c2.chunk.js.map