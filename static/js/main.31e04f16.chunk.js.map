{"version":3,"sources":["components/SortListbox.tsx","components/info/infoBubbleSort.tsx","sorts/bubbleSort.ts","components/info/infoInsertionSort.tsx","sorts/insertionSort.ts","components/info/infoSelectionSort.tsx","sorts/selectionSort.ts","components/info/infoMergeSort.tsx","sorts/mergeSort.ts","components/info/infoQuickSort.tsx","sorts/quickSort.ts","components/info/infoHeapSort.tsx","sorts/heapsort.ts","sorts/algorithms.ts","components/InfoSlideover.tsx","components/ControlButton.tsx","components/Controls.tsx","components/Visualiser.tsx","components/NightModeToggle.tsx","components/Footer.tsx","App.tsx","index.tsx"],"names":["SortListbox","list","selectedItem","setSelectedItem","disabled","className","value","onChange","Label","Button","aria-hidden","as","Fragment","leave","leaveFrom","leaveTo","Options","static","map","name","nameIdx","Option","active","selected","SyntaxHighlighter","registerLanguage","js","bubbleSort","sort","array","anim","swapped","searchSize","length","i","isGreater","swap","push","type","values","info","language","style","ocean","customStyle","borderRadius","insertionSort","j","selectionSort","minIndex","isSmaller","runMergeSort","clonedArray","beginIdx","endIdx","midIdx","Math","floor","merge","k","isLeq","mergeSort","slice","href","runQuickSort","startIdx","p","partition","pivotIdx","quickSort","buildHeap","node","getNodeParent","siftDown","end","getNodeLeftChild","child","nodeToSwap","heapSort","idx1","idx2","animArray","generateArray","size","Array","from","keys","random","algorithms","InfoSlideover","sliderOpen","setSliderOpen","selectedSortIdx","Root","show","open","onClose","Child","enter","enterFrom","enterTo","Overlay","Title","sortingAlgorithms","onClick","ControlButton","React","forwardRef","ref","handleClick","children","displayName","Controls","isRunning","sortNames","arraySize","handleArrayChange","handleSortClick","handleShuffleClick","handleResetClick","setSelectedSortIdx","useState","min","max","Visualiser","sortArray","_","height","Date","toString","NightModeToggle","handleToggle","isNightMode","checked","Footer","document","documentElement","classList","contains","isDarkMode","setIsDarkMode","useEffect","localStorage","setItem","add","remove","window","location","App","setSortArray","setActive","activeRef","useRef","current","startSort","animations","bars","getElementsByClassName","delay","animateSort","idx","prevAnim","prevBars","forEach","bar","currentStep","value1","value2","currBar1","currBar2","currBar","setTimeout","e","Number","target","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.31e04f16.chunk.js","sourcesContent":["import { Fragment } from 'react';\r\nimport { Listbox, Transition } from '@headlessui/react';\r\nimport { HiCheck, HiSelector } from 'react-icons/hi';\r\n\r\ninterface Props {\r\n  list: string[];\r\n  selectedItem: number;\r\n  setSelectedItem: React.Dispatch<React.SetStateAction<number>>;\r\n  disabled: boolean;\r\n}\r\n\r\nconst SortListbox = ({list, selectedItem, setSelectedItem, disabled}: Props) => {\r\n\r\n  return (\r\n    <div className=\"w-64\">\r\n      <Listbox value={selectedItem} onChange={setSelectedItem} disabled={disabled}>\r\n          <>\r\n            <Listbox.Label className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Algorithm</Listbox.Label>\r\n            <div className=\"relative\">\r\n              <Listbox.Button className=\"relative w-full py-2 pl-3 pr-10 text-left sm:text-sm bg-white dark:bg-trueGray-800 disabled:bg-gray-100 dark:disabled:bg-trueGray-600 hover:bg-blue-50 dark:hover:bg-gray-700 transition-colors duration-150 rounded-md shadow-md focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 cursor-default\">\r\n                <span className=\"block truncate dark:text-gray-400\">{list[selectedItem]}</span>\r\n                <span className=\"absolute inset-y-0 right-0 flex items-center p-2 pointer-events-none\">\r\n                  <HiSelector\r\n                    className=\"w-5 h-5 text-gray-400\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                </span>\r\n              </Listbox.Button>\r\n              <Transition\r\n                as={Fragment}\r\n                leave=\"transition ease-in duration-75\"\r\n                leaveFrom=\"transform opacity-100 translate-y-0\"\r\n                leaveTo=\"transform opacity-0 translate-y-1.5 md:-translate-y-1.5\"\r\n              >\r\n                <Listbox.Options static className=\"absolute bottom-full md:bottom-auto z-10 w-full py-1 my-1 overflow-auto text-base bg-white dark:bg-trueGray-800 rounded-md shadow-lg max-h-64 ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\r\n                  {list.map((name, nameIdx) => (\r\n                    <Listbox.Option\r\n                      key={nameIdx}\r\n                      className={({ active }) =>\r\n                        `${active ? 'text-blue-900 dark:text-blue-300 bg-blue-100 dark:bg-gray-700' : 'text-gray-900 dark:text-gray-400'}\r\n                          cursor-default select-none relative py-2 pl-10 pr-4`\r\n                      }\r\n                      value={nameIdx}\r\n                    >\r\n                      {({ selected, active }) => (\r\n                        <>\r\n                          <span\r\n                            className={`${selected ? 'font-medium' : 'font-normal'\r\n                              } block truncate`}\r\n                          >\r\n                            {name}\r\n                          </span>\r\n                          {selected ? (\r\n                            <span\r\n                              className={`${active ? 'text-blue-600' : 'text-blue-600'}\r\n                                absolute inset-y-0 left-0 flex items-center pl-3`}\r\n                            >\r\n                              <HiCheck className=\"w-5 h-5\" aria-hidden=\"true\" />\r\n                            </span>\r\n                          ) : null}\r\n                        </>\r\n                      )}\r\n                    </Listbox.Option>\r\n                  ))}\r\n                </Listbox.Options>\r\n              </Transition>\r\n            </div>\r\n          </>\r\n      </Listbox>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortListbox;","import { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\r\nimport { ocean } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nSyntaxHighlighter.registerLanguage('javascript', js);\r\n\r\nconst code = `const array = [...];\r\nlet swapped = true;\r\nlet searchSize = array.length;\r\n\r\n// Loop until swapping stops.\r\nwhile (swapped) {\r\n  swapped = false;\r\n\r\n  // Loop through the array.\r\n  // [i - 1] and [i] used to compare element pairs,\r\n  // so set i = 1 (not 0)\r\n  for (let i = 1; i < searchSize; i++) {\r\n    if (array[i-1] > array[i]) {\r\n      // Swap elements\r\n      temp = array[i - 1];\r\n      array[i - 1] = array[i];\r\n      array[i] = temp;\r\n\r\n      // Mark swapped as true, continue looping\r\n      swapped = true;\r\n    }\r\n  }\r\n\r\n  // Largest element is sorted, exclude last index\r\n  // by reducing searchSize.\r\n  searchSize--;\r\n}`;\r\n\r\nconst infoBubbleSort = () => (\r\n  <div className='text-sm'>\r\n    <p>\r\n      Bubble sort works by simply swapping adjacent elements if they are in the wrong order.\r\n    </p>\r\n\r\n    <br />\r\n\r\n    <p>\r\n      The algorithm loops through the entire array, checking if each pair of elements are in the right order.\r\n      If not, the pair of elements are swapped. This continues until the end of the array is reached, where the largest\r\n      element <b>bubbles</b> up to the top.\r\n    </p>\r\n\r\n    <br />\r\n\r\n    <p>\r\n      This process is repeated again, excluding the last index (as it is already sorted now).\r\n      Once the algorithm loops over the array without swapping elements, the algorithm terminates and the sort is complete.\r\n    </p>\r\n\r\n    <br />\r\n\r\n    <SyntaxHighlighter language='javascript' style={ocean} customStyle={{borderRadius: '0.375rem'}}>\r\n      {code}\r\n    </SyntaxHighlighter>\r\n  </div>\r\n);\r\n\r\nexport default infoBubbleSort;","import infoBubbleSort from 'components/info/infoBubbleSort';\r\nimport {SortingAlgorithm, AnimationStep, isGreater, swap } from './algorithms';\r\n\r\nconst sort = (array: number[]) => {\r\n  const anim: AnimationStep[] = [];\r\n\r\n  let swapped = true;\r\n  let searchSize = array.length;\r\n\r\n  while (swapped) {\r\n    swapped = false;\r\n\r\n    // Start at 1 since i-1 is used to compare.\r\n    //array.length - 1 because last position will be naturally sorted.\r\n    for (let i = 1; i < searchSize; i++) {\r\n      if (isGreater(i-1, i, array, anim)) {\r\n        swap(i-1, i, array, anim);\r\n        swapped = true;\r\n      }\r\n    }\r\n    searchSize--;\r\n  }\r\n\r\n  anim.push({type: 'end', values: [-1, -1], array: array});\r\n  return anim;\r\n};\r\n\r\nexport const bubbleSort: SortingAlgorithm = {\r\n  name: 'Bubble Sort',\r\n  sort,\r\n  info: infoBubbleSort,\r\n};","import { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\r\nimport { ocean } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nSyntaxHighlighter.registerLanguage('javascript', js);\r\n\r\nconst code = `const array = [...];\r\nlet i = 1; // Skip first element\r\n\r\n// Loop through the entire array...\r\nwhile (i < array.length) {\r\n    let j = i;\r\n    // Compare previous (sorted) element with current.\r\n    // If previous is larger, swap.\r\n    while (j > 0 && array[j + 1] > array[j]) {\r\n      temp = array[j + 1];\r\n      array[j + 1] = array[j];\r\n      array[j] = temp;\r\n\r\n      // Compare again with the next sorted element.\r\n      j--;\r\n    }\r\n\r\n    // If previous is smaller, element is sorted.\r\n    // Go to the next unsorted element.\r\n    i++;\r\n}`;\r\n\r\nconst infoInsertionSort = () => (\r\n  <div className='text-sm'>\r\n    <p>\r\n      Insertion sort works by dividing the array into two parts - a sorted part and an unsorted part.\r\n    </p>\r\n\r\n    <p>\r\n      An element in the unsorted part is compared with the elements in the sorted part until the correct position is found,\r\n      where it is then <b>insert</b>ed.\r\n    </p>\r\n\r\n    <br />\r\n\r\n    <p>Initially, the sorted part starts with a single element (a single element is already sorted).</p>\r\n\r\n    <p>\r\n      The first element in the unsorted part is compared with the largest element in the sorted part of the array\r\n      (i.e. the previous element).\r\n    </p>\r\n\r\n    <br />\r\n\r\n    <ul className='list-disc list-inside ml-4'>\r\n      <li>If that element is larger, both elements swap positions.</li>\r\n      <li>If the element is smaller, the first element is sorted.</li>\r\n    </ul>\r\n\r\n    <br />\r\n\r\n    <p>\r\n      This process continues until the end of the array is reached.\r\n    </p>\r\n\r\n    <br />\r\n\r\n    <SyntaxHighlighter language='javascript' style={ocean} customStyle={{borderRadius: '0.375rem'}}>\r\n      {code}\r\n    </SyntaxHighlighter>\r\n  </div>\r\n);\r\n\r\nexport default infoInsertionSort;","import { SortingAlgorithm, AnimationStep, isGreater, swap } from './algorithms';\r\nimport infoInsertionSort from '../components/info/infoInsertionSort';\r\n\r\nconst sort = (array: number[]) => {\r\n  const anim: AnimationStep[] = [];\r\n\r\n  let i = 1; // Skip first element\r\n  while (i < array.length) {\r\n    let j = i;\r\n    // Compare previous element with current. If previous is larger, swap.\r\n    while (j > 0 && isGreater(j-1, j, array, anim)) {\r\n      swap(j-1, j, array, anim);\r\n      j--;\r\n    }\r\n    i++;\r\n  }\r\n\r\n  anim.push({type: 'end', values: [-1, -1], array});\r\n  return anim;\r\n};\r\n\r\nexport const insertionSort: SortingAlgorithm = {\r\n  name: 'Insertion Sort',\r\n  sort,\r\n  info: infoInsertionSort,\r\n};","import { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\r\nimport { ocean } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nSyntaxHighlighter.registerLanguage('javascript', js);\r\n\r\nconst code = `const array = [...];\r\n\r\n// Loop through array up to array.length - 1\r\n// because last element will already be sorted.\r\nfor (let i = 0; i < array.length - 1; i++) {\r\n\r\n  // Keep track of index with smallest element.\r\n  let minIndex = i;\r\n\r\n  // Compare every index with minIndex.\r\n  // If there is a smaller element, update minIndex.\r\n  for (let j = i + 1; j < array.length; j++) {\r\n    if (array[j] < array[minIndex]) minIndex = j;\r\n  }\r\n\r\n  // Swap elements in minIndex and current index (i).\r\n  if (minIndex !== i) {\r\n      temp = array[i];\r\n      array[i] = array[minIndex];\r\n      array[minIndex] = temp;\r\n  }\r\n}`;\r\n\r\nconst infoSelectionSort = () => (\r\n  <div className='text-sm'>\r\n    <p>\r\n      Selection sort works by dividing the array into two parts - a sorted part and an unsorted part.\r\n    </p>\r\n\r\n    <br />\r\n    \r\n    <p>\r\n      The algorithm then looks through the entire array for the smallest element,\r\n      and places it in the first position of the array.\r\n      It proceeds to then find the next smallest element in the unsorted part of the array,\r\n      and places it in the second position of the array.\r\n    </p>\r\n\r\n    <br />\r\n\r\n    <p>\r\n      This continues until the second largest element is placed in the second last position.\r\n      The largest element will already be sorted as it will have swapped with the element that was in the last position.\r\n    </p>\r\n\r\n    <br />\r\n\r\n    <SyntaxHighlighter language='javascript' style={ocean} customStyle={{borderRadius: '0.375rem'}}>\r\n      {code}\r\n    </SyntaxHighlighter>\r\n  </div>\r\n);\r\n\r\nexport default infoSelectionSort;","import infoSelectionSort from 'components/info/infoSelectionSort';\r\nimport {SortingAlgorithm, AnimationStep, isSmaller, swap } from './algorithms';\r\n\r\nconst sort = (array: number[]) => {\r\n  const anim: AnimationStep[] = [];\r\n\r\n  // Can do array.length - 1 because last element will already be sorted.\r\n  for (let i = 0; i < array.length - 1; i++) { \r\n    let minIndex = i;\r\n    for (let j = i + 1; j < array.length; j++) {\r\n      if (isSmaller(j, minIndex, array, anim)) minIndex = j;\r\n    }\r\n    if (minIndex !== i) {\r\n      swap(i, minIndex, array, anim);\r\n    }\r\n  }\r\n\r\n  anim.push({type: 'end', values: [-1, -1], array});\r\n  return anim;\r\n};\r\n\r\nexport const selectionSort: SortingAlgorithm = {\r\n  name: 'Selection Sort',\r\n  sort,\r\n  info: infoSelectionSort,\r\n};","import { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\r\nimport { ocean } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nSyntaxHighlighter.registerLanguage('javascript', js);\r\n\r\nconst code = `To be completed`;\r\n\r\nconst infoMergeSort = () => (\r\n  <div className='text-sm'>\r\n    <p>\r\n    <a className='underline' href='https://en.wikipedia.org/wiki/Merge_sort'>https://en.wikipedia.org/wiki/Merge_sort</a>\r\n    </p>\r\n\r\n    <br />\r\n\r\n    <SyntaxHighlighter language='javascript' style={ocean} customStyle={{borderRadius: '0.375rem'}}>\r\n      {code}\r\n    </SyntaxHighlighter>\r\n  </div>\r\n);\r\n\r\nexport default infoMergeSort;","import infoMergeSort from \"components/info/infoMergeSort\";\r\nimport { AnimationStep, isLeq, SortingAlgorithm } from \"./algorithms\";\r\n\r\nconst sort = (array: number[]) => {\r\n  const anim: AnimationStep[] = [];\r\n  runMergeSort(array, array.slice(), 0, array.length - 1, anim);\r\n  anim.push({type: 'end', values: [-1, -1], array});\r\n  return anim;\r\n};\r\n\r\nconst runMergeSort = (array: number[], clonedArray: number[],\r\n  beginIdx: number, endIdx: number, anim: AnimationStep[]) => {\r\n\r\n  if (beginIdx === endIdx) return;  // Base case - if subarray is length 1, return.\r\n  const midIdx = Math.floor((beginIdx + endIdx) / 2);\r\n  runMergeSort(clonedArray, array, beginIdx, midIdx, anim);\r\n  runMergeSort(clonedArray, array, midIdx + 1, endIdx, anim);\r\n  merge(array, clonedArray, beginIdx, midIdx, endIdx, anim);\r\n  return array;\r\n};\r\n\r\nconst merge = (array: number[], clonedArray: number[],\r\n  beginIdx: number, midIdx: number, endIdx: number, anim: AnimationStep[]) => {\r\n\r\n  let i = beginIdx;\r\n  let k = beginIdx;\r\n  let j = midIdx + 1;\r\n\r\n  // Compare the first element of each subarray, and pop the smallest element.\r\n  // Increment from the array that was saved, and repeat until one array is empty.\r\n  while (i <= midIdx && j <= endIdx) {\r\n      if (isLeq(i, j, clonedArray, anim)) {\r\n      anim.push({type: 'overwrite', values: [k, clonedArray[i]]});\r\n      array[k++] = clonedArray[i++];\r\n    } else {\r\n      anim.push({type: 'overwrite', values: [k, clonedArray[j]]});\r\n      array[k++] = clonedArray[j++];\r\n    }\r\n  }\r\n\r\n  // Go through the arrays and add all the elements left over.\r\n  while (i <= midIdx) {\r\n    anim.push({type: 'overwrite', values: [k, clonedArray[i]]});\r\n    array[k++] = clonedArray[i++];\r\n  }\r\n  while (j <= endIdx) {\r\n    anim.push({type: 'overwrite', values: [k, clonedArray[j]]});\r\n    array[k++] = clonedArray[j++];\r\n  }\r\n};\r\n\r\nexport const mergeSort: SortingAlgorithm = {\r\n  name: 'Merge Sort',\r\n  sort,\r\n  info: infoMergeSort,\r\n};","import { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\r\nimport { ocean } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nSyntaxHighlighter.registerLanguage('javascript', js);\r\n\r\nconst code = `To be completed`;\r\n\r\nconst infoQuickSort = () => (\r\n  <div className='text-sm'>\r\n    <p>\r\n    <a className='underline' href='https://en.wikipedia.org/wiki/Quicksort'>https://en.wikipedia.org/wiki/Quicksort</a>\r\n    </p>\r\n\r\n    <br />\r\n\r\n    <SyntaxHighlighter language='javascript' style={ocean} customStyle={{borderRadius: '0.375rem'}}>\r\n      {code}\r\n    </SyntaxHighlighter>\r\n  </div>\r\n);\r\n\r\nexport default infoQuickSort;","import infoQuickSort from 'components/info/infoQuickSort';\r\nimport { AnimationStep, isGreater, isSmaller, SortingAlgorithm, swap } from './algorithms';\r\n\r\nconst sort = (array: number[]) => {\r\n  const anim: AnimationStep[] = [];\r\n  runQuickSort(array, 0, array.length - 1, anim);\r\n  anim.push({type: 'end', values: [-1, -1], array: array});\r\n  return anim;\r\n};\r\n\r\nconst runQuickSort = (array: number[], startIdx: number, endIdx: number, anim: AnimationStep[]) => {\r\n  if (startIdx < endIdx) {\r\n    const p = partition(array, startIdx, endIdx, anim);\r\n    runQuickSort(array, startIdx, p, anim);\r\n    runQuickSort(array, p + 1, endIdx, anim);\r\n  }\r\n};\r\n\r\nconst partition = (array: number[], startIdx: number, endIdx: number, anim: AnimationStep[]) => {\r\n  // Set pivot to be the middle of the array\r\n  let pivotIdx = Math.floor((startIdx + endIdx) / 2);\r\n  let i = startIdx - 1;\r\n  let j = endIdx + 1;\r\n\r\n  for (;;) {\r\n    // Inc/dec i and j until they pass the value of pivot\r\n    do {\r\n      i++;\r\n    } while (isSmaller(i, pivotIdx, array, anim));\r\n    do {\r\n      j--;\r\n    } while (isGreater(j, pivotIdx, array, anim));\r\n    if (i >= j) {\r\n      return j;\r\n    }\r\n    swap(i, j, array, anim);\r\n\r\n    // Update value of pivot if moved\r\n    if (i === pivotIdx) {\r\n      pivotIdx = j;\r\n    } else if (j === pivotIdx) {\r\n      pivotIdx = i;\r\n    }\r\n  }\r\n};\r\n\r\nexport const quickSort: SortingAlgorithm = {\r\n  name: 'Quick Sort',\r\n  sort,\r\n  info: infoQuickSort,\r\n};","import { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\r\nimport { ocean } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nSyntaxHighlighter.registerLanguage('javascript', js);\r\n\r\nconst code = `To be completed`;\r\n\r\nconst infoHeapSort = () => (\r\n  <div className='text-sm'>\r\n    <p>\r\n    <a className='underline' href='https://en.wikipedia.org/wiki/Heapsort'>https://en.wikipedia.org/wiki/Heapsort</a>\r\n    </p>\r\n\r\n    <br />\r\n\r\n    <SyntaxHighlighter language='javascript' style={ocean} customStyle={{borderRadius: '0.375rem'}}>\r\n      {code}\r\n    </SyntaxHighlighter>\r\n  </div>\r\n);\r\n\r\nexport default infoHeapSort;","import infoHeapSort from \"components/info/infoHeapSort\";\r\nimport { AnimationStep, swap, isSmaller, SortingAlgorithm } from \"./algorithms\";\r\n\r\nconst sort = (array: number[]) => {\r\n  const anim: AnimationStep[] = [];\r\n\r\n  buildHeap(array, anim);\r\n  let end = array.length - 1;\r\n\r\n  while (end > 0) {\r\n    swap(0, end, array, anim);\r\n    end--;\r\n    siftDown(array, 0, end, anim);\r\n  }\r\n\r\n  anim.push({type: 'end', values: [-1, -1], array});\r\n  return anim;\r\n};\r\n\r\nconst buildHeap = (array: number[], anim: AnimationStep[]) => {\r\n  // Get the parent of the last node\r\n  let node = getNodeParent(array.length - 1);\r\n\r\n  while (node >= 0) {\r\n    siftDown(array, node, array.length - 1, anim);\r\n    node--;\r\n  }\r\n};\r\n\r\nconst siftDown = (array: number[], node: number, end: number, anim: AnimationStep[]) => {\r\n\r\n  while (getNodeLeftChild(node) <= end) {\r\n    const child = getNodeLeftChild(node);\r\n    let nodeToSwap = node;\r\n\r\n    if (isSmaller(nodeToSwap, child, array, anim)) nodeToSwap = child;\r\n    if (child + 1 <= end && isSmaller(nodeToSwap, child + 1, array, anim)) nodeToSwap = child + 1;\r\n    if (nodeToSwap === node) return;\r\n    \r\n    swap(nodeToSwap, node, array, anim);\r\n    node = nodeToSwap;\r\n  }\r\n};\r\n\r\nconst getNodeParent = (i: number) => Math.floor((i - 1) / 2);\r\nconst getNodeLeftChild = (i: number) => 2 * i + 1;\r\n// const getNodeRightChild = i => 2 * i + 2;\r\n\r\nexport const heapSort: SortingAlgorithm = {\r\n  name: 'Heap Sort',\r\n  sort,\r\n  info: infoHeapSort,\r\n};","import { bubbleSort } from './bubbleSort';\r\nimport { insertionSort } from './insertionSort';\r\nimport { selectionSort } from './selectionSort';\r\nimport { mergeSort } from './mergeSort';\r\nimport { quickSort } from './quickSort';\r\nimport { heapSort } from './heapsort';\r\n\r\nexport interface SortingAlgorithm {\r\n  name: string;\r\n  sort: (array: number[]) => AnimationStep[];\r\n  info: () => JSX.Element;\r\n}\r\n\r\nexport type AnimationStep = AnimationChange | AnimationEnd;\r\n\r\ninterface AnimationBase {\r\n  type: string;\r\n  values: [number, number];\r\n}\r\ninterface AnimationChange extends AnimationBase {\r\n  type: 'compare' | 'swap' | 'overwrite';\r\n}\r\n\r\ninterface AnimationEnd extends AnimationBase {\r\n  type: 'end';\r\n  array: number[];\r\n}\r\n\r\nexport const isGreater = (idx1: number, idx2: number, array: number[], animArray: AnimationStep[]) => {\r\n  animArray.push({type: 'compare', values: [idx1, idx2]});\r\n  return array[idx1] > array[idx2];\r\n};\r\n\r\nexport const isSmaller = (idx1: number, idx2: number, array: number[], animArray: AnimationStep[]) => {\r\n  animArray.push({type: 'compare', values: [idx1, idx2]});\r\n  return array[idx1] < array[idx2];\r\n};\r\n\r\nexport const isLeq = (idx1: number, idx2: number, array: number[], animArray: AnimationStep[]) => {\r\n  animArray.push({type: 'compare', values: [idx1, idx2]});\r\n  return array[idx1] <= array[idx2];\r\n};\r\n\r\nexport const swap = (idx1: number, idx2: number, array: number[], animArray: AnimationStep[]) => {\r\n  [array[idx1], array[idx2]] = [array[idx2], array[idx1]];\r\n  animArray.push({type: 'swap', values: [idx1, idx2]});\r\n};\r\n\r\nexport const generateArray = (size: number): number[] => {\r\n  const array = Array.from(Array(size).keys());\r\n\r\n  // Durstenfeld shuffle algorithm: https://stackoverflow.com/a/12646864\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n\r\n  return array;\r\n};\r\n\r\nconst algorithms = [bubbleSort, heapSort, insertionSort, mergeSort, quickSort, selectionSort];\r\n\r\nexport default algorithms;","import sortingAlgorithms from '../sorts/algorithms';\r\nimport { Fragment } from 'react';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { HiX } from 'react-icons/hi';\r\n\r\ninterface Props {\r\n  sliderOpen: boolean;\r\n  setSliderOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  selectedSortIdx: number;\r\n}\r\n\r\nconst InfoSlideover = ({ sliderOpen, setSliderOpen, selectedSortIdx }: Props) => {\r\n\r\n  return (\r\n    <Transition.Root show={sliderOpen} as={Fragment}>\r\n      <Dialog as=\"div\" static className=\"fixed inset-0 overflow-hidden\" open={sliderOpen} onClose={setSliderOpen}>\r\n        <div className=\"absolute inset-0 overflow-hidden\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-in-out duration-500\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in-out duration-500\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Dialog.Overlay className=\"absolute inset-0 bg-gray-500 dark:bg-trueGray-900 bg-opacity-75 dark:bg-opacity-75 transition-opacity\" />\r\n          </Transition.Child>\r\n          <div className=\"fixed inset-y-0 right-0 max-w-full flex\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"transform transition ease-out duration-500 sm:duration-600\"\r\n              enterFrom=\"translate-x-full\"\r\n              enterTo=\"translate-x-0\"\r\n              leave=\"transform transition ease-in-out duration-500 sm:duration-600\"\r\n              leaveFrom=\"translate-x-0\"\r\n              leaveTo=\"translate-x-full\"\r\n            >\r\n              <div className=\"relative w-screen max-w-lg\">\r\n                <div className=\"h-full flex flex-col py-6 bg-white dark:bg-trueGray-800 shadow-xl overflow-y-auto\">\r\n                  <div className=\"inline-flex justify-between px-4 sm:px-6\">\r\n                    <Dialog.Title className=\"text-lg font-medium text-gray-900 dark:text-trueGray-200\">\r\n                      {sortingAlgorithms[selectedSortIdx].name}\r\n                    </Dialog.Title>\r\n                    <Transition.Child\r\n                      as={Fragment}\r\n                      enter=\"ease-in-out duration-500\"\r\n                      enterFrom=\"opacity-0\"\r\n                      enterTo=\"opacity-100\"\r\n                      leave=\"ease-in-out duration-500\"\r\n                      leaveFrom=\"opacity-100\"\r\n                      leaveTo=\"opacity-0\"\r\n                    >\r\n                        <button\r\n                          className=\"rounded-md text-gray-400 dark:text-gray-400 hover:text-gray-500 dark:hover:text-gray-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500\"\r\n                          onClick={() => setSliderOpen(false)}\r\n                        >\r\n                          <span className=\"sr-only\">Close panel</span>\r\n                          <HiX className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                        </button>\r\n                    </Transition.Child>\r\n                  </div>\r\n                  <div className=\"mt-6 relative flex-1 px-4 sm:px-6 text-gray-900 dark:text-trueGray-200\">\r\n                    {sortingAlgorithms[selectedSortIdx].info()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Transition.Child>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n};\r\n\r\nexport default InfoSlideover;","import React, { PropsWithChildren } from 'react';\r\n\r\ninterface Props {\r\n  handleClick: () => void;\r\n}\r\n\r\nconst ControlButton = React.forwardRef<HTMLButtonElement, PropsWithChildren<Props>>(({handleClick, children}, ref) => (\r\n    <button\r\n      ref={ref}\r\n      onClick={handleClick}\r\n      type='button'\r\n      className='h-full px-4 py-2 text-sm font-title text-gray-400 bg-gray-50 dark:bg-trueGray-800 hover:bg-gray-100 dark:hover:bg-trueGray-700 active:bg-gray-200 dark:active:bg-trueGray-600 transition-colors duration-150 rounded-md focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500'\r\n    >\r\n      {children}\r\n    </button>\r\n));\r\n\r\nControlButton.displayName = 'ControlButton';\r\n\r\nexport default ControlButton;\r\n\r\n","import SortListbox from './SortListbox';\r\nimport InfoSlideover from './InfoSlideover';\r\nimport { BiReset, BiRefresh, BiHelpCircle } from 'react-icons/bi';\r\nimport { Transition } from '@headlessui/react';\r\nimport { Fragment, useState } from 'react';\r\nimport ControlButton from './ControlButton';\r\n\r\ninterface Props {\r\n  isRunning: boolean;\r\n  sortNames: string[];\r\n  arraySize: number;\r\n  handleArrayChange: React.ChangeEventHandler<HTMLInputElement>;\r\n  handleSortClick: () => void;\r\n  handleResetClick: () => void;\r\n  handleShuffleClick: () => void;\r\n  selectedSortIdx: number;\r\n  setSelectedSortIdx: React.Dispatch<React.SetStateAction<number>>;\r\n}\r\n\r\nconst Controls = ({\r\n  isRunning,\r\n  sortNames,\r\n  arraySize,\r\n  handleArrayChange,\r\n  handleSortClick,\r\n  handleShuffleClick,\r\n  handleResetClick,\r\n  selectedSortIdx,\r\n  setSelectedSortIdx\r\n}: Props) => {\r\n  const [sliderOpen, setSliderOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div className='w-64'>\r\n        <div className='text-sm font-medium text-gray-500 dark:text-gray-400'>\r\n          <span>Array size</span>\r\n          <span className='float-right'>{arraySize}</span>\r\n        </div>\r\n        <input\r\n          type='range'\r\n          min='5'\r\n          max='100'\r\n          disabled={isRunning}\r\n          value={arraySize}\r\n          onChange={handleArrayChange}\r\n          className='w-full rounded-lg focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500'\r\n        />\r\n      </div>\r\n\r\n      <SortListbox\r\n        list={sortNames}\r\n        selectedItem={selectedSortIdx}\r\n        setSelectedItem={setSelectedSortIdx}\r\n        disabled={isRunning}\r\n      />\r\n\r\n      <button\r\n        onClick={() => setSliderOpen(true)}\r\n        className='flex items-center text-sm font-semibold text-gray-500 dark:text-gray-400 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500'\r\n      >\r\n        <BiHelpCircle className='inline mr-1 align-bottom' aria-hidden='true' />\r\n        How it works\r\n      </button>\r\n      <InfoSlideover sliderOpen={sliderOpen} setSliderOpen={setSliderOpen} selectedSortIdx={selectedSortIdx}/>\r\n\r\n      <div className='w-64 mt-1 grid grid-cols-3 gap-x-4'>\r\n        <ControlButton handleClick={handleShuffleClick}>\r\n          <BiRefresh className='w-5 h-5 mx-auto' aria-hidden='true' />\r\n          Shuffle\r\n        </ControlButton>\r\n\r\n        <button\r\n          onClick={handleSortClick}\r\n          type='button'\r\n          className='z-0 min-w-0 h-3/4 px-4 py-2.5 self-center text-sm font-title text-blue-900 dark:text-blue-400 bg-blue-100 dark:bg-gray-700 hover:bg-blue-200 dark:hover:bg-gray-600 active:bg-blue-300 dark:active:bg-gray-500 rounded-md shadow-md transition transform motion-reduce:transition-none duration-150 ease-out active:translate-y-0.5 active:shadow-none focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500'\r\n        >\r\n          Sort\r\n        </button>\r\n\r\n        <Transition\r\n          as={Fragment}\r\n          show={isRunning}\r\n          enter='transition ease-out duration-100'\r\n          enterFrom='transform -translate-x-3 opacity-0' enterTo='transform translate-x-0 opacity-100'\r\n          leave='transition ease-in duration-100'\r\n          leaveFrom='opacity-100' leaveTo='opacity-0'\r\n        >\r\n          <ControlButton handleClick={handleResetClick}>\r\n            <BiReset className=\"w-5 h-5 mx-auto\" aria-hidden=\"true\" />\r\n            Reset\r\n          </ControlButton>\r\n        </Transition>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Controls;","interface Props {\r\n  sortArray: number[];\r\n}\r\n\r\nconst Visualiser = ({sortArray}: Props) => (\r\n  <div className='visual-bars col-span-6 lg:col-span-7 h-[24rem] lg:h-[30rem] flex items-end justify-center space-x-0.5 md:space-x-1 mx-4'>\r\n    {sortArray.map((value, _, array) => (\r\n    <div key={value + Date().toString()} className='w-14 bg-teal-500 dark:bg-teal-600 rounded-tl-md  ' style={{ height: `${(value + 1) / array.length * 100}%` }}></div>\r\n  ))}\r\n</div>\r\n);\r\n\r\nexport default Visualiser;","import { Switch } from '@headlessui/react';\r\n\r\ninterface Props {\r\n  handleToggle: (checked: boolean) => void;\r\n  isNightMode: boolean;\r\n}\r\n\r\nconst NightModeToggle = ({handleToggle, isNightMode}: Props) => {\r\n\r\n  return (\r\n      <Switch\r\n        checked={isNightMode}\r\n        onChange={handleToggle}\r\n        className={`${isNightMode ? 'bg-teal-900' : 'bg-teal-500'}\r\n          inline-flex flex-shrink-0 h-[30.5px] w-[58px] border-2 border-transparent rounded-full cursor-pointer disabled:bg-gray-400 dark:disabled:bg-trueGray-600 disabled:cursor-not-allowed transition-colors ease-in-out duration-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500`}\r\n      >\r\n        <span className=\"sr-only\">Use setting</span>\r\n        <span\r\n          aria-hidden=\"true\"\r\n          className={`${isNightMode ? 'translate-x-7' : 'translate-x-0'}\r\n            pointer-events-none inline-block h-[26px] w-[26px] rounded-full bg-white dark:bg-trueGray-200 shadow-lg transform ring-0 transition ease-in-out duration-200`}\r\n        />\r\n      </Switch>\r\n  );\r\n};\r\n\r\nexport default NightModeToggle;\r\n","import ControlButton from './ControlButton';\r\nimport NightModeToggle from './NightModeToggle';\r\nimport { FaGithub } from 'react-icons/fa';\r\nimport { HiSun, HiMoon } from 'react-icons/hi';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst Footer = () => {\r\n  const [isDarkMode, setIsDarkMode] = useState(document.documentElement.classList.contains('dark'));\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('isDarkTheme', isDarkMode.toString());\r\n    if (isDarkMode) {\r\n      document.documentElement.classList.add('dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n    }\r\n  }, [isDarkMode]);\r\n\r\n  return (\r\n    <>\r\n      <ControlButton handleClick={() => window.location.href = 'https://github.com/Talha-Ak/visual-sorts'}>\r\n        View on\r\n        <FaGithub className='ml-1.5 mb-1 inline' />\r\n      </ControlButton>\r\n      <div className='flex items-center justify-center space-x-1.5'>\r\n        <HiSun className='inline w-5 h-5' />\r\n        <NightModeToggle isNightMode={isDarkMode} handleToggle={setIsDarkMode} />\r\n        <HiMoon className='inline w-5 h-5' />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;","import Controls from './components/Controls';\r\nimport Visualiser from './components/Visualiser';\r\nimport sortingAlgorithms, { AnimationStep, generateArray } from './sorts/algorithms';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport Footer from 'components/Footer';\r\n\r\nconst App = () => {\r\n\r\n  const [sortArray, setSortArray] = useState(() => generateArray(40));\r\n  const [selectedSortIdx, setSelectedSortIdx] = useState(0);\r\n  const [active, setActive] = useState(false);\r\n  const activeRef = useRef(active);\r\n  activeRef.current = active;\r\n\r\n  useEffect(() => {\r\n    if (active) {\r\n      startSort();\r\n    } else {\r\n      setSortArray(sortArray.slice());\r\n    }\r\n  }, [active]);\r\n\r\n  const startSort = () => {\r\n    const animations = sortingAlgorithms[selectedSortIdx].sort(sortArray.slice());\r\n    const bars = document.getElementsByClassName('visual-bars')[0].children;\r\n    const delay = (3000 / (sortArray.length)) - 10;\r\n    animateSort(animations, 0, bars, delay);\r\n  };\r\n\r\n  const animateSort = (anim: AnimationStep[], idx: number, bars: HTMLCollection, delay: number) => {\r\n    const prevAnim = anim[idx - 1];\r\n    const prevBars = [];\r\n    if (prevAnim?.type === 'overwrite') {\r\n      prevBars.push(prevAnim.values[0]);\r\n    } else if (prevAnim) {\r\n      prevBars.push(...prevAnim?.values);\r\n    }\r\n    prevBars?.forEach(bar => {\r\n      bars[bar].classList.remove('bg-red-500', 'dark:bg-red-700', 'bg-blue-500', 'dark:bg-blue-700');\r\n      bars[bar].classList.add('bg-teal-500', 'dark:bg-teal-600');\r\n    });\r\n\r\n    const currentStep = anim[idx];\r\n\r\n    const [value1, value2] = currentStep.values;\r\n\r\n    if (activeRef.current) {\r\n\r\n      switch (currentStep.type) {\r\n        case 'compare':\r\n          [bars[value1], bars[value2]].forEach(bar => {\r\n            bar.classList.remove('bg-teal-500', 'dark:bg-teal-600');\r\n            bar.classList.add('bg-red-500', 'dark:bg-red-700');\r\n          });\r\n          break;\r\n\r\n        case 'swap': {\r\n          const currBar1 = bars[value1] as HTMLElement;\r\n          const currBar2 = bars[value2] as HTMLElement;\r\n          [currBar1, currBar2].forEach(bar => {\r\n            bar.classList.remove('bg-teal-500', 'dark:bg-teal-600');\r\n            bar.classList.add('bg-blue-500', 'dark:bg-blue-700');\r\n          });\r\n          [currBar1.style.height, currBar2.style.height] = [currBar2.style.height, currBar1.style.height];\r\n          break;\r\n        }\r\n\r\n        case 'overwrite': {\r\n          const currBar = bars[value1] as HTMLElement;\r\n          currBar.classList.remove('bg-teal-500', 'dark:bg-teal-600');\r\n          currBar.classList.add('bg-blue-500', 'dark:bg-blue-700');\r\n          currBar.style.height = `${(value2 + 1) / sortArray.length * 100}%`;\r\n          break;\r\n        }\r\n\r\n        case 'end':\r\n          setActive(false);\r\n          setSortArray(currentStep.array);\r\n          return;\r\n      }\r\n\r\n      idx++;\r\n      setTimeout(() => animateSort(anim, idx, bars, delay), delay);\r\n\r\n    } else {\r\n      const shuffledBars = Array.from(document.getElementsByClassName('visual-bars')[0].children);\r\n      shuffledBars.forEach(bar => {\r\n        bar.classList.remove('bg-red-500', 'dark:bg-red-700');\r\n        bar.classList.add('bg-teal-500', 'dark:bg-teal-600');\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className='absolute inset-x-0 top-0 h-48 z-[-1] slant-bottom bg-teal-50 dark:bg-trueGray-800 transition-colors duration-150' />\r\n    <div className='absolute inset-x-0 bottom-0 h-32 z-[-1] slant-top bg-blue-50 dark:bg-gray-800 transition-colors duration-150' />\r\n    <div className='min-h-screen max-w-screen-2xl mx-auto flex flex-col gap-12'>\r\n      <h1 className='flex-shrink-0 mt-4 font-title font-black text-center text-4xl md:text-6xl dark:text-trueGray-200 transition-colors duration-150'>Visual Sorts</h1>\r\n      <div className='flex-1 gap-y-5 md:grid md:grid-cols-10 items-center'>\r\n        <Visualiser sortArray={sortArray} />\r\n        <div className='mt-8 md:m-0 md:col-span-4 lg:col-span-3 flex flex-col items-center gap-y-5 mx-4'>\r\n          <Controls\r\n            isRunning={active}\r\n            sortNames={sortingAlgorithms.map(sort => sort.name)}\r\n            arraySize={sortArray.length}\r\n            handleArrayChange={(e) => setSortArray(generateArray(Number(e.target.value)))}\r\n            handleSortClick={() => setActive(true)}\r\n            handleResetClick={() => setActive(false)}\r\n            handleShuffleClick={() => {\r\n              setActive(false);\r\n              setSortArray(generateArray(sortArray.length));\r\n            }}\r\n            selectedSortIdx={selectedSortIdx}\r\n            setSelectedSortIdx={(e) => setSelectedSortIdx(e)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='flex-shrink-0 p-4 flex items-center justify-evenly text-gray-500 dark:text-gray-400'>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}